<?php

namespace app\index\controller;

use app\common\controller\Frontend;

class Products extends Frontend
{

    protected $noNeedLogin = '*';
    protected $noNeedRight = '*';
    protected $layout = '';

    /**
     * 产品中心
     * @return string
     * @throws \think\Exception
     */
    public function index()
    {
        // 当前文章分类
        $subMenu = db('article_category')
            ->where('link', '/'.$this->request->pathinfo())
            ->find();

        $image = db('images')
            ->where('article_category_id', $subMenu['id'])
            ->find();

        // 二级模块
        $childArticleCategoryList = db('article_category')
            ->where('parent_id', $subMenu['id'])
            ->order('weigh desc, id asc')
            ->limit(10)
            ->select();

        $title= !empty($subMenu['seo_title']) ? $subMenu['seo_title'] : $this->site['seo_title'];
        $keywords = !empty($subMenu['seo_keywords']) ? $subMenu['seo_keywords'] : $this->site['seo_keywords'];
        $description = !empty($subMenu['seo_description']) ? $subMenu['seo_description'] : $this->site['seo_description'];
        $this->assign('title', $title);
        $this->assign('keywords', $keywords);
        $this->assign('description', $description);

        $this->assign('childArticleCategoryList', $childArticleCategoryList);
        $this->assign('image', $image);
        $this->assign('subMenu', $subMenu);
        $this->assign('sign', 'products');
        return $this->view->fetch();
    }

    /**
     * 商品列表
     * @param int $id
     * @return string
     * @throws \think\Exception
     */
    public function list($id=0)
    {
        // 当前模块
        $subMenu = db('article_category')
            ->where('id', $id)
            ->find();

        $ids = $subMenu['id'];

        // 上级模块
        $parentMenu = db('article_category')
            ->where('id', $subMenu['parent_id'])
            ->find();

        // 顶级模块
        $topParentMenu = [];
        if(!empty($parentMenu['parent_id'])) $topParentMenu = db('article_category')->where('id', $parentMenu['parent_id'])->find();

        $image = db('images')->where('article_category_id', $subMenu['id'])->find();

        // 查询模块下的子模块
        $childCategoryIds = db('article_category')
            ->where('parent_id', '=', $subMenu['id'])
            ->value('GROUP_CONCAT(id) as ids');

        if(!empty($childCategoryIds)) $ids .=','.$childCategoryIds;

        $productList = db('goods')
            ->where('article_category_id', 'in', $ids)
            ->order('weigh desc, id desc')
            ->select();

        foreach($productList as &$v){
            $v['images'] = explode(',', $v['images']);
            $v['article_category_name'] = db('article_category')
                ->where('id', '=', $v['article_category_id'])
                ->value('article_category_name');
        }
        unset($v);

        $title= !empty($subMenu['seo_title']) ? $subMenu['seo_title'] : $this->site['seo_title'];
        $keywords = !empty($subMenu['seo_keywords']) ? $subMenu['seo_keywords'] : $this->site['seo_keywords'];
        $description = !empty($subMenu['seo_description']) ? $subMenu['seo_description'] : $this->site['seo_description'];
        $this->assign('title', $title);
        $this->assign('keywords', $keywords);
        $this->assign('description', $description);

        $this->assign('subMenu', $subMenu);
        $this->assign('productList', $productList);
        $this->assign('image', $image);
        $this->assign('parentMenu', $parentMenu);
        $this->assign('topParentMenu', $topParentMenu);
        $this->assign('sign', 'products');
        return $this->view->fetch();
    }

    public function detail($id=0)
    {
        // 商品信息
        $productDetail = db('goods')->where('id', $id)->find();
        if(!empty($productDetail)) $productDetail['images'] = explode(',', $productDetail['images']);

        // 商品上级模块信息
        $articleCategory = db('article_category')->where('id', $productDetail['article_category_id'])->find();

        $parentArticlaCategory_1 =[];
        $parentArticlaCategory_2 =[];
        $parentArticlaCategory_3 =[];

        // 顶级模块
        $topArticleCategory = [];
        $parentArticlaCategory_1 = $articleCategory;
        if(empty($articleCategory['parent_id']))
        {
            $topArticleCategory = $articleCategory;
        }
        else
        {
            $parentArticleCategory = db('article_category')->where('id', $articleCategory['parent_id'])->find();
            $parentArticlaCategory_2 = $parentArticleCategory;
            if(empty($parentArticleCategory['parent_id']))
            {
                $topArticleCategory = $parentArticleCategory;
            }
            else
            {
                $topArticleCategory = db('article_category')->where('id', $parentArticleCategory['parent_id'])->find();
                $parentArticlaCategory_3 = $topArticleCategory;
            }
        }


        // 查询子模块列表
        $articleCategoryList = db('article_category')->where('parent_id', $topArticleCategory['id'])->select();
        if(!empty($articleCategoryList))
        {
            $ids = implode(',', array_column($articleCategoryList, 'id'));
            $articleCategoryList_1 = db('article_category')
                ->where('parent_id', 'in', $ids)
                ->order('weigh desc, id desc')
                ->select();
            $articleCategoryList = array_merge($articleCategoryList, $articleCategoryList_1);
        }

        // 产品推荐
        $productList = db('goods')
            ->alias('a')
            ->join('article_category b','a.article_category_id = b.id')
            ->where('a.is_tuijian', '=', '1')
            ->order('a.weigh desc, a.id desc')
            ->field('a.id, a.title, a.title_en, a.images, a.article_category_id, b.article_category_name, b.article_category_enname, a.is_tuijian')
            ->select();
        if(!empty($productList))
        {
            foreach($productList as &$v)
            {
                $v['images'] = explode(',', $v['images']);
            }
            unset($v);
        }

        $title= !empty($productDetail['seo_title']) ? $productDetail['seo_title'] : $this->site['seo_title'];
        $keywords = !empty($productDetail['seo_keywords']) ? $productDetail['seo_keywords'] : $this->site['seo_keywords'];
        $description = !empty($productDetail['seo_description']) ? $productDetail['seo_description'] : $this->site['seo_description'];
        $this->assign('title', $title);
        $this->assign('keywords', $keywords);
        $this->assign('description', $description);

        $this->assign('productList', $productList);
        $this->assign('productDetail', $productDetail);
        $this->assign('topArticleCategory', $topArticleCategory);
        $this->assign('articleCategoryList', $articleCategoryList);
        $this->assign('parentArticlaCategory_1', $parentArticlaCategory_1);
        $this->assign('parentArticlaCategory_2', $parentArticlaCategory_2);
        $this->assign('parentArticlaCategory_3', $parentArticlaCategory_3);
        $this->assign('sign', 'products');
        return $this->view->fetch();
    }

}
